services:
  db: #serviço do banco de dados mysql
    image: mysql:latest #imagem do mysql
    command: mysqld --default-authentication-plugin=mysql_native_password #comando para inicializar o mysql no container
    restart: always #configuração de reinicialização do container
    volumes: #definir os volumes
      - /home/amadeu/sprintdocker/db_data:/var/lib/mysql
    environment: #variáveis de ambiente
      TZ: America/Sao_Paulo #timezone
      MYSQL_ROOT_PASSWORD: Compass123@ #senha do root
      MYSQL_USER: amadeu #usuário
      MYSQL_PASSWORD: Amadeu123@ #senha
      MYSQL_DATABASE: wordpress #banco de dados
    ports:
      - 3308:3306 #portas que vão ser expostas
    networks:
      - wordpress-network
  wordpress: #serviço do wordpress
    image: wordpress:latest #imagem do mysql
    restart: always #configuração de reinicialização do container
    volumes: #definir os volumes
      - /home/amadeu/sprintdocker/wp_data:/var/www/html
    environment: #variáveis de ambiente
      TZ: America/Sao_Paulo #timezone
      WORDPRESS_DB_HOST: db #url do banco de dados para linkar o wordpress ao db
      WORDPRESS_DB_NAME: wordpress #nome do banco
      WORDPRESS_DB_USER: root #nome do root do mysql
      WORDPRESS_DB_PASSWORD: Compass123@ #senha do root do mysql definida no serviço db
    ports:
      - 80:80 #portas onde o wordpress é exposto
    depends_on:
      - db #depende do funcionamento do db
    networks:
      - wordpress-network

  phpmyadmin: #serviço do phpmyadmin
    depends_on: 
      - db #depende do mysql pra rodar
    image: phpmyadmin:5.2.0
    restart: always
    ports:
      - 8080:80 #portas de acesso
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: Compass123@
    networks:
      - wordpress-network

networks: #definindo a rede interna
  wordpress-network:
    driver: bridge

volumes:
  db_data:
  wp_data: